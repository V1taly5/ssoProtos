// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: fs.proto

package fsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PeerStatus_Status int32

const (
	PeerStatus_ONLINE        PeerStatus_Status = 0
	PeerStatus_BUSY          PeerStatus_Status = 1
	PeerStatus_AWAY          PeerStatus_Status = 2
	PeerStatus_DISCONNECTING PeerStatus_Status = 3
)

// Enum value maps for PeerStatus_Status.
var (
	PeerStatus_Status_name = map[int32]string{
		0: "ONLINE",
		1: "BUSY",
		2: "AWAY",
		3: "DISCONNECTING",
	}
	PeerStatus_Status_value = map[string]int32{
		"ONLINE":        0,
		"BUSY":          1,
		"AWAY":          2,
		"DISCONNECTING": 3,
	}
)

func (x PeerStatus_Status) Enum() *PeerStatus_Status {
	p := new(PeerStatus_Status)
	*p = x
	return p
}

func (x PeerStatus_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PeerStatus_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_fs_proto_enumTypes[0].Descriptor()
}

func (PeerStatus_Status) Type() protoreflect.EnumType {
	return &file_fs_proto_enumTypes[0]
}

func (x PeerStatus_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PeerStatus_Status.Descriptor instead.
func (PeerStatus_Status) EnumDescriptor() ([]byte, []int) {
	return file_fs_proto_rawDescGZIP(), []int{4, 0}
}

type ErrorMessage_ErrorCode int32

const (
	ErrorMessage_UNKNOWN              ErrorMessage_ErrorCode = 0
	ErrorMessage_INVALID_MESSAGE      ErrorMessage_ErrorCode = 1
	ErrorMessage_CONNECTION_ERROR     ErrorMessage_ErrorCode = 2
	ErrorMessage_AUTHENTICATION_ERROR ErrorMessage_ErrorCode = 3
	ErrorMessage_PERMISSION_DENIED    ErrorMessage_ErrorCode = 4
	ErrorMessage_FILE_NOT_FOUND       ErrorMessage_ErrorCode = 5
	ErrorMessage_BLOCK_NOT_FOUND      ErrorMessage_ErrorCode = 6
	ErrorMessage_DISK_FULL            ErrorMessage_ErrorCode = 7
	ErrorMessage_PROTOCOL_ERROR       ErrorMessage_ErrorCode = 8
)

// Enum value maps for ErrorMessage_ErrorCode.
var (
	ErrorMessage_ErrorCode_name = map[int32]string{
		0: "UNKNOWN",
		1: "INVALID_MESSAGE",
		2: "CONNECTION_ERROR",
		3: "AUTHENTICATION_ERROR",
		4: "PERMISSION_DENIED",
		5: "FILE_NOT_FOUND",
		6: "BLOCK_NOT_FOUND",
		7: "DISK_FULL",
		8: "PROTOCOL_ERROR",
	}
	ErrorMessage_ErrorCode_value = map[string]int32{
		"UNKNOWN":              0,
		"INVALID_MESSAGE":      1,
		"CONNECTION_ERROR":     2,
		"AUTHENTICATION_ERROR": 3,
		"PERMISSION_DENIED":    4,
		"FILE_NOT_FOUND":       5,
		"BLOCK_NOT_FOUND":      6,
		"DISK_FULL":            7,
		"PROTOCOL_ERROR":       8,
	}
)

func (x ErrorMessage_ErrorCode) Enum() *ErrorMessage_ErrorCode {
	p := new(ErrorMessage_ErrorCode)
	*p = x
	return p
}

func (x ErrorMessage_ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorMessage_ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_fs_proto_enumTypes[1].Descriptor()
}

func (ErrorMessage_ErrorCode) Type() protoreflect.EnumType {
	return &file_fs_proto_enumTypes[1]
}

func (x ErrorMessage_ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorMessage_ErrorCode.Descriptor instead.
func (ErrorMessage_ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_fs_proto_rawDescGZIP(), []int{13, 0}
}

type Message struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	MassageId  uint64                 `protobuf:"varint,1,opt,name=massage_id,json=massageId,proto3" json:"massage_id,omitempty"`
	Timestamp  uint64                 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SenderId   string                 `protobuf:"bytes,3,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	ReceiverId string                 `protobuf:"bytes,4,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*Message_Handshake
	//	*Message_Ping
	//	*Message_Pong
	//	*Message_IndexUpdate
	//	*Message_PeerStatus
	//	*Message_BlockRequest
	//	*Message_BlockResponse
	//	*Message_PullRequest
	//	*Message_PushRequest
	//	*Message_Error
	Payload       isMessage_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_fs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_fs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_fs_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetMassageId() uint64 {
	if x != nil {
		return x.MassageId
	}
	return 0
}

func (x *Message) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Message) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *Message) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *Message) GetPayload() isMessage_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Message) GetHandshake() *Handshake {
	if x != nil {
		if x, ok := x.Payload.(*Message_Handshake); ok {
			return x.Handshake
		}
	}
	return nil
}

func (x *Message) GetPing() *PingMSG {
	if x != nil {
		if x, ok := x.Payload.(*Message_Ping); ok {
			return x.Ping
		}
	}
	return nil
}

func (x *Message) GetPong() *PongMSG {
	if x != nil {
		if x, ok := x.Payload.(*Message_Pong); ok {
			return x.Pong
		}
	}
	return nil
}

func (x *Message) GetIndexUpdate() *IndexUpdate {
	if x != nil {
		if x, ok := x.Payload.(*Message_IndexUpdate); ok {
			return x.IndexUpdate
		}
	}
	return nil
}

func (x *Message) GetPeerStatus() *PeerStatus {
	if x != nil {
		if x, ok := x.Payload.(*Message_PeerStatus); ok {
			return x.PeerStatus
		}
	}
	return nil
}

func (x *Message) GetBlockRequest() *BlockRequest {
	if x != nil {
		if x, ok := x.Payload.(*Message_BlockRequest); ok {
			return x.BlockRequest
		}
	}
	return nil
}

func (x *Message) GetBlockResponse() *BlockResponse {
	if x != nil {
		if x, ok := x.Payload.(*Message_BlockResponse); ok {
			return x.BlockResponse
		}
	}
	return nil
}

func (x *Message) GetPullRequest() *PullRequest {
	if x != nil {
		if x, ok := x.Payload.(*Message_PullRequest); ok {
			return x.PullRequest
		}
	}
	return nil
}

func (x *Message) GetPushRequest() *PushRequest {
	if x != nil {
		if x, ok := x.Payload.(*Message_PushRequest); ok {
			return x.PushRequest
		}
	}
	return nil
}

func (x *Message) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Payload.(*Message_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isMessage_Payload interface {
	isMessage_Payload()
}

type Message_Handshake struct {
	Handshake *Handshake `protobuf:"bytes,10,opt,name=handshake,proto3,oneof"`
}

type Message_Ping struct {
	Ping *PingMSG `protobuf:"bytes,11,opt,name=ping,proto3,oneof"`
}

type Message_Pong struct {
	Pong *PongMSG `protobuf:"bytes,12,opt,name=pong,proto3,oneof"`
}

type Message_IndexUpdate struct {
	IndexUpdate *IndexUpdate `protobuf:"bytes,13,opt,name=index_update,json=indexUpdate,proto3,oneof"`
}

type Message_PeerStatus struct {
	PeerStatus *PeerStatus `protobuf:"bytes,14,opt,name=peer_status,json=peerStatus,proto3,oneof"`
}

type Message_BlockRequest struct {
	BlockRequest *BlockRequest `protobuf:"bytes,15,opt,name=block_request,json=blockRequest,proto3,oneof"`
}

type Message_BlockResponse struct {
	BlockResponse *BlockResponse `protobuf:"bytes,16,opt,name=block_response,json=blockResponse,proto3,oneof"`
}

type Message_PullRequest struct {
	PullRequest *PullRequest `protobuf:"bytes,17,opt,name=pull_request,json=pullRequest,proto3,oneof"`
}

type Message_PushRequest struct {
	PushRequest *PushRequest `protobuf:"bytes,18,opt,name=push_request,json=pushRequest,proto3,oneof"`
}

type Message_Error struct {
	Error *ErrorMessage `protobuf:"bytes,19,opt,name=error,proto3,oneof"`
}

func (*Message_Handshake) isMessage_Payload() {}

func (*Message_Ping) isMessage_Payload() {}

func (*Message_Pong) isMessage_Payload() {}

func (*Message_IndexUpdate) isMessage_Payload() {}

func (*Message_PeerStatus) isMessage_Payload() {}

func (*Message_BlockRequest) isMessage_Payload() {}

func (*Message_BlockResponse) isMessage_Payload() {}

func (*Message_PullRequest) isMessage_Payload() {}

func (*Message_PushRequest) isMessage_Payload() {}

func (*Message_Error) isMessage_Payload() {}

type Handshake struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ProtocolVersion string                 `protobuf:"bytes,1,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	DeviceName      string                 `protobuf:"bytes,2,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	Capabilities    []string               `protobuf:"bytes,3,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	PublicKey       []byte                 `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Handshake) Reset() {
	*x = Handshake{}
	mi := &file_fs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Handshake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Handshake) ProtoMessage() {}

func (x *Handshake) ProtoReflect() protoreflect.Message {
	mi := &file_fs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Handshake.ProtoReflect.Descriptor instead.
func (*Handshake) Descriptor() ([]byte, []int) {
	return file_fs_proto_rawDescGZIP(), []int{1}
}

func (x *Handshake) GetProtocolVersion() string {
	if x != nil {
		return x.ProtocolVersion
	}
	return ""
}

func (x *Handshake) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *Handshake) GetCapabilities() []string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *Handshake) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type PingMSG struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeqNum        uint64                 `protobuf:"varint,1,opt,name=seq_num,json=seqNum,proto3" json:"seq_num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingMSG) Reset() {
	*x = PingMSG{}
	mi := &file_fs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingMSG) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingMSG) ProtoMessage() {}

func (x *PingMSG) ProtoReflect() protoreflect.Message {
	mi := &file_fs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingMSG.ProtoReflect.Descriptor instead.
func (*PingMSG) Descriptor() ([]byte, []int) {
	return file_fs_proto_rawDescGZIP(), []int{2}
}

func (x *PingMSG) GetSeqNum() uint64 {
	if x != nil {
		return x.SeqNum
	}
	return 0
}

type PongMSG struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeqNum        uint64                 `protobuf:"varint,1,opt,name=seq_num,json=seqNum,proto3" json:"seq_num,omitempty"`
	RoundTripTime uint64                 `protobuf:"varint,2,opt,name=round_trip_time,json=roundTripTime,proto3" json:"round_trip_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PongMSG) Reset() {
	*x = PongMSG{}
	mi := &file_fs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PongMSG) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PongMSG) ProtoMessage() {}

func (x *PongMSG) ProtoReflect() protoreflect.Message {
	mi := &file_fs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PongMSG.ProtoReflect.Descriptor instead.
func (*PongMSG) Descriptor() ([]byte, []int) {
	return file_fs_proto_rawDescGZIP(), []int{3}
}

func (x *PongMSG) GetSeqNum() uint64 {
	if x != nil {
		return x.SeqNum
	}
	return 0
}

func (x *PongMSG) GetRoundTripTime() uint64 {
	if x != nil {
		return x.RoundTripTime
	}
	return 0
}

type PeerStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        PeerStatus_Status      `protobuf:"varint,1,opt,name=status,proto3,enum=cover.PeerStatus_Status" json:"status,omitempty"`
	CpuLoad       uint32                 `protobuf:"varint,2,opt,name=cpu_load,json=cpuLoad,proto3" json:"cpu_load,omitempty"`
	FreeDiskSpace uint64                 `protobuf:"varint,3,opt,name=free_disk_space,json=freeDiskSpace,proto3" json:"free_disk_space,omitempty"`
	BattaryLevel  uint32                 `protobuf:"varint,4,opt,name=battary_level,json=battaryLevel,proto3" json:"battary_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeerStatus) Reset() {
	*x = PeerStatus{}
	mi := &file_fs_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerStatus) ProtoMessage() {}

func (x *PeerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_fs_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerStatus.ProtoReflect.Descriptor instead.
func (*PeerStatus) Descriptor() ([]byte, []int) {
	return file_fs_proto_rawDescGZIP(), []int{4}
}

func (x *PeerStatus) GetStatus() PeerStatus_Status {
	if x != nil {
		return x.Status
	}
	return PeerStatus_ONLINE
}

func (x *PeerStatus) GetCpuLoad() uint32 {
	if x != nil {
		return x.CpuLoad
	}
	return 0
}

func (x *PeerStatus) GetFreeDiskSpace() uint64 {
	if x != nil {
		return x.FreeDiskSpace
	}
	return 0
}

func (x *PeerStatus) GetBattaryLevel() uint32 {
	if x != nil {
		return x.BattaryLevel
	}
	return 0
}

type IndexUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*FileInfo            `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	IsFullUpdate  bool                   `protobuf:"varint,2,opt,name=is_full_update,json=isFullUpdate,proto3" json:"is_full_update,omitempty"`
	Sequence      uint64                 `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexUpdate) Reset() {
	*x = IndexUpdate{}
	mi := &file_fs_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexUpdate) ProtoMessage() {}

func (x *IndexUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_fs_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexUpdate.ProtoReflect.Descriptor instead.
func (*IndexUpdate) Descriptor() ([]byte, []int) {
	return file_fs_proto_rawDescGZIP(), []int{5}
}

func (x *IndexUpdate) GetFiles() []*FileInfo {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *IndexUpdate) GetIsFullUpdate() bool {
	if x != nil {
		return x.IsFullUpdate
	}
	return false
}

func (x *IndexUpdate) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type FileInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Size          uint64                 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	ModifiedTime  uint64                 `protobuf:"varint,3,opt,name=modified_time,json=modifiedTime,proto3" json:"modified_time,omitempty"`
	Mode          string                 `protobuf:"bytes,4,opt,name=mode,proto3" json:"mode,omitempty"`
	IsDirectory   bool                   `protobuf:"varint,5,opt,name=is_directory,json=isDirectory,proto3" json:"is_directory,omitempty"`
	FileId        []byte                 `protobuf:"bytes,6,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Blocks        []*BlockInfo           `protobuf:"bytes,7,rep,name=blocks,proto3" json:"blocks,omitempty"`
	Attributes    map[string]string      `protobuf:"bytes,8,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	mi := &file_fs_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fs_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_fs_proto_rawDescGZIP(), []int{6}
}

func (x *FileInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileInfo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileInfo) GetModifiedTime() uint64 {
	if x != nil {
		return x.ModifiedTime
	}
	return 0
}

func (x *FileInfo) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *FileInfo) GetIsDirectory() bool {
	if x != nil {
		return x.IsDirectory
	}
	return false
}

func (x *FileInfo) GetFileId() []byte {
	if x != nil {
		return x.FileId
	}
	return nil
}

func (x *FileInfo) GetBlocks() []*BlockInfo {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *FileInfo) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type BlockInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         uint32                 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Sizy          uint32                 `protobuf:"varint,2,opt,name=sizy,proto3" json:"sizy,omitempty"`
	Hash          []byte                 `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	RollingHash   []byte                 `protobuf:"bytes,4,opt,name=rolling_hash,json=rollingHash,proto3" json:"rolling_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockInfo) Reset() {
	*x = BlockInfo{}
	mi := &file_fs_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockInfo) ProtoMessage() {}

func (x *BlockInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fs_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockInfo.ProtoReflect.Descriptor instead.
func (*BlockInfo) Descriptor() ([]byte, []int) {
	return file_fs_proto_rawDescGZIP(), []int{7}
}

func (x *BlockInfo) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *BlockInfo) GetSizy() uint32 {
	if x != nil {
		return x.Sizy
	}
	return 0
}

func (x *BlockInfo) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *BlockInfo) GetRollingHash() []byte {
	if x != nil {
		return x.RollingHash
	}
	return nil
}

type BlockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	BlockIndexes  []uint32               `protobuf:"varint,2,rep,packed,name=block_indexes,json=blockIndexes,proto3" json:"block_indexes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockRequest) Reset() {
	*x = BlockRequest{}
	mi := &file_fs_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockRequest) ProtoMessage() {}

func (x *BlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fs_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockRequest.ProtoReflect.Descriptor instead.
func (*BlockRequest) Descriptor() ([]byte, []int) {
	return file_fs_proto_rawDescGZIP(), []int{8}
}

func (x *BlockRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *BlockRequest) GetBlockIndexes() []uint32 {
	if x != nil {
		return x.BlockIndexes
	}
	return nil
}

type BlockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Blocks        []*Block               `protobuf:"bytes,2,rep,name=blocks,proto3" json:"blocks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockResponse) Reset() {
	*x = BlockResponse{}
	mi := &file_fs_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockResponse) ProtoMessage() {}

func (x *BlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fs_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockResponse.ProtoReflect.Descriptor instead.
func (*BlockResponse) Descriptor() ([]byte, []int) {
	return file_fs_proto_rawDescGZIP(), []int{9}
}

func (x *BlockResponse) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *BlockResponse) GetBlocks() []*Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type Block struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         uint32                 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Hash          []byte                 `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Block) Reset() {
	*x = Block{}
	mi := &file_fs_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_fs_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_fs_proto_rawDescGZIP(), []int{10}
}

func (x *Block) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Block) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Block) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type PullRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileIds       []string               `protobuf:"bytes,1,rep,name=file_ids,json=fileIds,proto3" json:"file_ids,omitempty"`
	InvludeDeltas bool                   `protobuf:"varint,2,opt,name=invlude_deltas,json=invludeDeltas,proto3" json:"invlude_deltas,omitempty"`
	Force         bool                   `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullRequest) Reset() {
	*x = PullRequest{}
	mi := &file_fs_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullRequest) ProtoMessage() {}

func (x *PullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fs_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullRequest.ProtoReflect.Descriptor instead.
func (*PullRequest) Descriptor() ([]byte, []int) {
	return file_fs_proto_rawDescGZIP(), []int{11}
}

func (x *PullRequest) GetFileIds() []string {
	if x != nil {
		return x.FileIds
	}
	return nil
}

func (x *PullRequest) GetInvludeDeltas() bool {
	if x != nil {
		return x.InvludeDeltas
	}
	return false
}

func (x *PullRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type PushRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileIds       []string               `protobuf:"bytes,1,rep,name=file_ids,json=fileIds,proto3" json:"file_ids,omitempty"`
	TotalSize     uint64                 `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PushRequest) Reset() {
	*x = PushRequest{}
	mi := &file_fs_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushRequest) ProtoMessage() {}

func (x *PushRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fs_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushRequest.ProtoReflect.Descriptor instead.
func (*PushRequest) Descriptor() ([]byte, []int) {
	return file_fs_proto_rawDescGZIP(), []int{12}
}

func (x *PushRequest) GetFileIds() []string {
	if x != nil {
		return x.FileIds
	}
	return nil
}

func (x *PushRequest) GetTotalSize() uint64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

type ErrorMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          ErrorMessage_ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=cover.ErrorMessage_ErrorCode" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Context       string                 `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorMessage) Reset() {
	*x = ErrorMessage{}
	mi := &file_fs_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMessage) ProtoMessage() {}

func (x *ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_fs_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMessage.ProtoReflect.Descriptor instead.
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return file_fs_proto_rawDescGZIP(), []int{13}
}

func (x *ErrorMessage) GetCode() ErrorMessage_ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorMessage_UNKNOWN
}

func (x *ErrorMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorMessage) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

var File_fs_proto protoreflect.FileDescriptor

const file_fs_proto_rawDesc = "" +
	"\n" +
	"\bfs.proto\x12\x05cover\"\x96\x05\n" +
	"\aMessage\x12\x1d\n" +
	"\n" +
	"massage_id\x18\x01 \x01(\x04R\tmassageId\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x04R\ttimestamp\x12\x1b\n" +
	"\tsender_id\x18\x03 \x01(\tR\bsenderId\x12\x1f\n" +
	"\vreceiver_id\x18\x04 \x01(\tR\n" +
	"receiverId\x120\n" +
	"\thandshake\x18\n" +
	" \x01(\v2\x10.cover.HandshakeH\x00R\thandshake\x12$\n" +
	"\x04ping\x18\v \x01(\v2\x0e.cover.PingMSGH\x00R\x04ping\x12$\n" +
	"\x04pong\x18\f \x01(\v2\x0e.cover.PongMSGH\x00R\x04pong\x127\n" +
	"\findex_update\x18\r \x01(\v2\x12.cover.IndexUpdateH\x00R\vindexUpdate\x124\n" +
	"\vpeer_status\x18\x0e \x01(\v2\x11.cover.PeerStatusH\x00R\n" +
	"peerStatus\x12:\n" +
	"\rblock_request\x18\x0f \x01(\v2\x13.cover.BlockRequestH\x00R\fblockRequest\x12=\n" +
	"\x0eblock_response\x18\x10 \x01(\v2\x14.cover.BlockResponseH\x00R\rblockResponse\x127\n" +
	"\fpull_request\x18\x11 \x01(\v2\x12.cover.PullRequestH\x00R\vpullRequest\x127\n" +
	"\fpush_request\x18\x12 \x01(\v2\x12.cover.PushRequestH\x00R\vpushRequest\x12+\n" +
	"\x05error\x18\x13 \x01(\v2\x13.cover.ErrorMessageH\x00R\x05errorB\t\n" +
	"\apayload\"\x9a\x01\n" +
	"\tHandshake\x12)\n" +
	"\x10protocol_version\x18\x01 \x01(\tR\x0fprotocolVersion\x12\x1f\n" +
	"\vdevice_name\x18\x02 \x01(\tR\n" +
	"deviceName\x12\"\n" +
	"\fcapabilities\x18\x03 \x03(\tR\fcapabilities\x12\x1d\n" +
	"\n" +
	"public_key\x18\x04 \x01(\fR\tpublicKey\"\"\n" +
	"\aPingMSG\x12\x17\n" +
	"\aseq_num\x18\x01 \x01(\x04R\x06seqNum\"J\n" +
	"\aPongMSG\x12\x17\n" +
	"\aseq_num\x18\x01 \x01(\x04R\x06seqNum\x12&\n" +
	"\x0fround_trip_time\x18\x02 \x01(\x04R\rroundTripTime\"\xe3\x01\n" +
	"\n" +
	"PeerStatus\x120\n" +
	"\x06status\x18\x01 \x01(\x0e2\x18.cover.PeerStatus.StatusR\x06status\x12\x19\n" +
	"\bcpu_load\x18\x02 \x01(\rR\acpuLoad\x12&\n" +
	"\x0ffree_disk_space\x18\x03 \x01(\x04R\rfreeDiskSpace\x12#\n" +
	"\rbattary_level\x18\x04 \x01(\rR\fbattaryLevel\";\n" +
	"\x06Status\x12\n" +
	"\n" +
	"\x06ONLINE\x10\x00\x12\b\n" +
	"\x04BUSY\x10\x01\x12\b\n" +
	"\x04AWAY\x10\x02\x12\x11\n" +
	"\rDISCONNECTING\x10\x03\"v\n" +
	"\vIndexUpdate\x12%\n" +
	"\x05files\x18\x01 \x03(\v2\x0f.cover.FileInfoR\x05files\x12$\n" +
	"\x0eis_full_update\x18\x02 \x01(\bR\fisFullUpdate\x12\x1a\n" +
	"\bsequence\x18\x03 \x01(\x04R\bsequence\"\xd1\x02\n" +
	"\bFileInfo\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x04R\x04size\x12#\n" +
	"\rmodified_time\x18\x03 \x01(\x04R\fmodifiedTime\x12\x12\n" +
	"\x04mode\x18\x04 \x01(\tR\x04mode\x12!\n" +
	"\fis_directory\x18\x05 \x01(\bR\visDirectory\x12\x17\n" +
	"\afile_id\x18\x06 \x01(\fR\x06fileId\x12(\n" +
	"\x06blocks\x18\a \x03(\v2\x10.cover.BlockInfoR\x06blocks\x12?\n" +
	"\n" +
	"attributes\x18\b \x03(\v2\x1f.cover.FileInfo.AttributesEntryR\n" +
	"attributes\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"l\n" +
	"\tBlockInfo\x12\x14\n" +
	"\x05index\x18\x01 \x01(\rR\x05index\x12\x12\n" +
	"\x04sizy\x18\x02 \x01(\rR\x04sizy\x12\x12\n" +
	"\x04hash\x18\x03 \x01(\fR\x04hash\x12!\n" +
	"\frolling_hash\x18\x04 \x01(\fR\vrollingHash\"L\n" +
	"\fBlockRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12#\n" +
	"\rblock_indexes\x18\x02 \x03(\rR\fblockIndexes\"N\n" +
	"\rBlockResponse\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12$\n" +
	"\x06blocks\x18\x02 \x03(\v2\f.cover.BlockR\x06blocks\"E\n" +
	"\x05Block\x12\x14\n" +
	"\x05index\x18\x01 \x01(\rR\x05index\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12\x12\n" +
	"\x04hash\x18\x03 \x01(\fR\x04hash\"e\n" +
	"\vPullRequest\x12\x19\n" +
	"\bfile_ids\x18\x01 \x03(\tR\afileIds\x12%\n" +
	"\x0einvlude_deltas\x18\x02 \x01(\bR\rinvludeDeltas\x12\x14\n" +
	"\x05force\x18\x03 \x01(\bR\x05force\"G\n" +
	"\vPushRequest\x12\x19\n" +
	"\bfile_ids\x18\x01 \x03(\tR\afileIds\x12\x1d\n" +
	"\n" +
	"total_size\x18\x02 \x01(\x04R\ttotalSize\"\xb8\x02\n" +
	"\fErrorMessage\x121\n" +
	"\x04code\x18\x01 \x01(\x0e2\x1d.cover.ErrorMessage.ErrorCodeR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x18\n" +
	"\acontext\x18\x03 \x01(\tR\acontext\"\xc0\x01\n" +
	"\tErrorCode\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\x13\n" +
	"\x0fINVALID_MESSAGE\x10\x01\x12\x14\n" +
	"\x10CONNECTION_ERROR\x10\x02\x12\x18\n" +
	"\x14AUTHENTICATION_ERROR\x10\x03\x12\x15\n" +
	"\x11PERMISSION_DENIED\x10\x04\x12\x12\n" +
	"\x0eFILE_NOT_FOUND\x10\x05\x12\x13\n" +
	"\x0fBLOCK_NOT_FOUND\x10\x06\x12\r\n" +
	"\tDISK_FULL\x10\a\x12\x12\n" +
	"\x0ePROTOCOL_ERROR\x10\bB\fZ\n" +
	"fs.v1;fsv1b\x06proto3"

var (
	file_fs_proto_rawDescOnce sync.Once
	file_fs_proto_rawDescData []byte
)

func file_fs_proto_rawDescGZIP() []byte {
	file_fs_proto_rawDescOnce.Do(func() {
		file_fs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fs_proto_rawDesc), len(file_fs_proto_rawDesc)))
	})
	return file_fs_proto_rawDescData
}

var file_fs_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_fs_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_fs_proto_goTypes = []any{
	(PeerStatus_Status)(0),      // 0: cover.PeerStatus.Status
	(ErrorMessage_ErrorCode)(0), // 1: cover.ErrorMessage.ErrorCode
	(*Message)(nil),             // 2: cover.Message
	(*Handshake)(nil),           // 3: cover.Handshake
	(*PingMSG)(nil),             // 4: cover.PingMSG
	(*PongMSG)(nil),             // 5: cover.PongMSG
	(*PeerStatus)(nil),          // 6: cover.PeerStatus
	(*IndexUpdate)(nil),         // 7: cover.IndexUpdate
	(*FileInfo)(nil),            // 8: cover.FileInfo
	(*BlockInfo)(nil),           // 9: cover.BlockInfo
	(*BlockRequest)(nil),        // 10: cover.BlockRequest
	(*BlockResponse)(nil),       // 11: cover.BlockResponse
	(*Block)(nil),               // 12: cover.Block
	(*PullRequest)(nil),         // 13: cover.PullRequest
	(*PushRequest)(nil),         // 14: cover.PushRequest
	(*ErrorMessage)(nil),        // 15: cover.ErrorMessage
	nil,                         // 16: cover.FileInfo.AttributesEntry
}
var file_fs_proto_depIdxs = []int32{
	3,  // 0: cover.Message.handshake:type_name -> cover.Handshake
	4,  // 1: cover.Message.ping:type_name -> cover.PingMSG
	5,  // 2: cover.Message.pong:type_name -> cover.PongMSG
	7,  // 3: cover.Message.index_update:type_name -> cover.IndexUpdate
	6,  // 4: cover.Message.peer_status:type_name -> cover.PeerStatus
	10, // 5: cover.Message.block_request:type_name -> cover.BlockRequest
	11, // 6: cover.Message.block_response:type_name -> cover.BlockResponse
	13, // 7: cover.Message.pull_request:type_name -> cover.PullRequest
	14, // 8: cover.Message.push_request:type_name -> cover.PushRequest
	15, // 9: cover.Message.error:type_name -> cover.ErrorMessage
	0,  // 10: cover.PeerStatus.status:type_name -> cover.PeerStatus.Status
	8,  // 11: cover.IndexUpdate.files:type_name -> cover.FileInfo
	9,  // 12: cover.FileInfo.blocks:type_name -> cover.BlockInfo
	16, // 13: cover.FileInfo.attributes:type_name -> cover.FileInfo.AttributesEntry
	12, // 14: cover.BlockResponse.blocks:type_name -> cover.Block
	1,  // 15: cover.ErrorMessage.code:type_name -> cover.ErrorMessage.ErrorCode
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_fs_proto_init() }
func file_fs_proto_init() {
	if File_fs_proto != nil {
		return
	}
	file_fs_proto_msgTypes[0].OneofWrappers = []any{
		(*Message_Handshake)(nil),
		(*Message_Ping)(nil),
		(*Message_Pong)(nil),
		(*Message_IndexUpdate)(nil),
		(*Message_PeerStatus)(nil),
		(*Message_BlockRequest)(nil),
		(*Message_BlockResponse)(nil),
		(*Message_PullRequest)(nil),
		(*Message_PushRequest)(nil),
		(*Message_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fs_proto_rawDesc), len(file_fs_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fs_proto_goTypes,
		DependencyIndexes: file_fs_proto_depIdxs,
		EnumInfos:         file_fs_proto_enumTypes,
		MessageInfos:      file_fs_proto_msgTypes,
	}.Build()
	File_fs_proto = out.File
	file_fs_proto_goTypes = nil
	file_fs_proto_depIdxs = nil
}
